# syntax=docker/dockerfile:1

# ----------- Base image -----------
FROM python:3.11-slim AS base
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# ----------- Builder stage -----------
FROM base AS builder

# Copy only requirements.txt first for better caching
COPY --link requirements.txt ./

# Create virtual environment and install dependencies
RUN python -m venv .venv && \
    .venv/bin/pip install --upgrade pip && \
    .venv/bin/pip install -r requirements.txt

# Copy the rest of the backend code
COPY --link . ./

# ----------- Final stage -----------
FROM base AS final

# Create a non-root user for security
RUN useradd -m appuser

WORKDIR /app

# Copy the virtual environment from builder
COPY --from=builder /app/.venv /app/.venv

# Copy the backend code from builder
COPY --from=builder /app /app

# Set PATH to use the virtual environment
ENV PATH="/app/.venv/bin:$PATH"

# Verify uvicorn is available
RUN /app/.venv/bin/python -c "import uvicorn; print('uvicorn available')" || \
    (/app/.venv/bin/pip install uvicorn && echo "uvicorn installed")

# Change ownership to appuser
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose the default port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD /app/.venv/bin/python -c "import requests; requests.get('http://localhost:8000/health')" || exit 1

# Entrypoint: run the FastAPI app
CMD ["/app/.venv/bin/uvicorn", "main_clean_english:app", "--host", "0.0.0.0", "--port", "8000"]
