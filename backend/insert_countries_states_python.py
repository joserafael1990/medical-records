#!/usr/bin/env python3
"""
Script to insert countries and states data using Python
"""

import psycopg2

def run_insertion():
    """Run the insertion of countries and states data"""
    
    # Database connection parameters
    db_params = {
        'host': 'postgres-db',
        'port': 5432,
        'database': 'historias_clinicas',
        'user': 'historias_user',
        'password': 'historias_pass'
    }
    
    conn = None
    cursor = None
    try:
        # Connect to database
        print("üîó Connecting to database...")
        conn = psycopg2.connect(**db_params)
        cursor = conn.cursor()
        
        # Countries data
        countries = [
            # Central America
            ('Guatemala', 'GT', True),
            ('Belice', 'BZ', True),
            ('El Salvador', 'SV', True),
            ('Honduras', 'HN', True),
            ('Nicaragua', 'NI', True),
            ('Costa Rica', 'CR', True),
            ('Panam√°', 'PA', True),
            
            # South America
            ('Argentina', 'AR', True),
            ('Bolivia', 'BO', True),
            ('Brasil', 'BR', True),
            ('Chile', 'CL', True),
            ('Colombia', 'CO', True),
            ('Ecuador', 'EC', True),
            ('Guyana', 'GY', True),
            ('Paraguay', 'PY', True),
            ('Per√∫', 'PE', True),
            ('Surinam', 'SR', True),
            ('Uruguay', 'UY', True),
            ('Venezuela', 'VE', True),
            
            # Caribbean
            ('Cuba', 'CU', True),
            ('Rep√∫blica Dominicana', 'DO', True),
            ('Hait√≠', 'HT', True),
            ('Jamaica', 'JM', True),
            ('Puerto Rico', 'PR', True),
            ('Trinidad y Tobago', 'TT', True),
            
            # Europe
            ('Espa√±a', 'ES', True),
            ('Francia', 'FR', True),
            ('Alemania', 'DE', True),
            ('Italia', 'IT', True),
            ('Reino Unido', 'GB', True),
            ('Portugal', 'PT', True),
            ('Pa√≠ses Bajos', 'NL', True),
            ('B√©lgica', 'BE', True),
            ('Suiza', 'CH', True),
            ('Austria', 'AT', True),
            ('Suecia', 'SE', True),
            ('Noruega', 'NO', True),
            ('Dinamarca', 'DK', True),
            ('Finlandia', 'FI', True),
            ('Polonia', 'PL', True),
            ('Rusia', 'RU', True),
            ('Ucrania', 'UA', True),
            ('Grecia', 'GR', True),
            ('Turqu√≠a', 'TR', True),
            ('Irlanda', 'IE', True),
            
            # Asia
            ('China', 'CN', True),
            ('Jap√≥n', 'JP', True),
            ('India', 'IN', True),
            ('Corea del Sur', 'KR', True),
            ('Corea del Norte', 'KP', True),
            ('Tailandia', 'TH', True),
            ('Vietnam', 'VN', True),
            ('Filipinas', 'PH', True),
            ('Indonesia', 'ID', True),
            ('Malasia', 'MY', True),
            ('Singapur', 'SG', True),
            ('Pakist√°n', 'PK', True),
            ('Bangladesh', 'BD', True),
            ('Sri Lanka', 'LK', True),
            ('Myanmar', 'MM', True),
            ('Camboya', 'KH', True),
            ('Laos', 'LA', True),
            ('Mongolia', 'MN', True),
            ('Kazajist√°n', 'KZ', True),
            ('Uzbekist√°n', 'UZ', True),
            
            # Africa
            ('Egipto', 'EG', True),
            ('Nigeria', 'NG', True),
            ('Sud√°frica', 'ZA', True),
            ('Kenia', 'KE', True),
            ('Etiop√≠a', 'ET', True),
            ('Ghana', 'GH', True),
            ('Marruecos', 'MA', True),
            ('Argelia', 'DZ', True),
            ('T√∫nez', 'TN', True),
            ('Libia', 'LY', True),
            ('Sud√°n', 'SD', True),
            ('Tanzania', 'TZ', True),
            ('Uganda', 'UG', True),
            ('Ruanda', 'RW', True),
            ('Senegal', 'SN', True),
            ('Costa de Marfil', 'CI', True),
            ('Mali', 'ML', True),
            ('Burkina Faso', 'BF', True),
            ('N√≠ger', 'NE', True),
            ('Chad', 'TD', True),
            
            # Oceania
            ('Australia', 'AU', True),
            ('Nueva Zelanda', 'NZ', True),
            ('Fiji', 'FJ', True),
            ('Pap√∫a Nueva Guinea', 'PG', True),
            ('Samoa', 'WS', True),
            ('Tonga', 'TO', True),
            
            # North America (excluding Mexico and USA)
            ('Canad√°', 'CA', True),
            ('Groenlandia', 'GL', True),
            
            # Others
            ('Israel', 'IL', True),
            ('Ir√°n', 'IR', True),
            ('Iraq', 'IQ', True),
            ('Afganist√°n', 'AF', True),
            ('Arabia Saud√≠', 'SA', True),
            ('Emiratos √Årabes Unidos', 'AE', True),
            ('Qatar', 'QA', True),
            ('Kuwait', 'KW', True),
            ('Bahrein', 'BH', True),
            ('Om√°n', 'OM', True),
            ('Yemen', 'YE', True),
            ('Jordania', 'JO', True),
            ('L√≠bano', 'LB', True),
            ('Siria', 'SY', True),
            ('Palestina', 'PS', True),
        ]
        
        print("üåç Inserting countries...")
        cursor.executemany(
            "INSERT INTO countries (name, active) VALUES (%s, %s)",
            [(name, active) for name, code, active in countries]
        )
        
        # Get country IDs for states insertion
        cursor.execute("SELECT id, name FROM countries WHERE active = true")
        country_map = {name: country_id for country_id, name in cursor.fetchall()}
        
        # States data for Hispanic American countries
        states_data = {
            'Guatemala': [  # Guatemala
                ('Guatemala', 'GT-GT'),
                ('Alta Verapaz', 'GT-AV'),
                ('Baja Verapaz', 'GT-BV'),
                ('Chimaltenango', 'GT-CM'),
                ('Chiquimula', 'GT-CQ'),
                ('Escuintla', 'GT-ES'),
                ('Huehuetenango', 'GT-HU'),
                ('Izabal', 'GT-IZ'),
                ('Jalapa', 'GT-JA'),
                ('Jutiapa', 'GT-JU'),
                ('Pet√©n', 'GT-PE'),
                ('Quetzaltenango', 'GT-QZ'),
                ('Quich√©', 'GT-QC'),
                ('Retalhuleu', 'GT-RE'),
                ('Sacatep√©quez', 'GT-SA'),
                ('San Marcos', 'GT-SM'),
                ('Santa Rosa', 'GT-SR'),
                ('Solol√°', 'GT-SO'),
                ('Suchitep√©quez', 'GT-SU'),
                ('Totonicap√°n', 'GT-TO'),
                ('Zacapa', 'GT-ZA'),
            ],
            'El Salvador': [  # El Salvador
                ('Ahuachap√°n', 'SV-AH'),
                ('Caba√±as', 'SV-CA'),
                ('Chalatenango', 'SV-CH'),
                ('Cuscatl√°n', 'SV-CU'),
                ('La Libertad', 'SV-LI'),
                ('La Paz', 'SV-PA'),
                ('La Uni√≥n', 'SV-UN'),
                ('Moraz√°n', 'SV-MO'),
                ('San Miguel', 'SV-SM'),
                ('San Salvador', 'SV-SS'),
                ('San Vicente', 'SV-SV'),
                ('Santa Ana', 'SV-SA'),
                ('Sonsonate', 'SV-SO'),
                ('Usulut√°n', 'SV-US'),
            ],
            'Honduras': [  # Honduras
                ('Atl√°ntida', 'HN-AT'),
                ('Choluteca', 'HN-CH'),
                ('Col√≥n', 'HN-CL'),
                ('Comayagua', 'HN-CM'),
                ('Cop√°n', 'HN-CP'),
                ('Cort√©s', 'HN-CR'),
                ('El Para√≠so', 'HN-EP'),
                ('Francisco Moraz√°n', 'HN-FM'),
                ('Gracias a Dios', 'HN-GD'),
                ('Intibuc√°', 'HN-IN'),
                ('Islas de la Bah√≠a', 'HN-IB'),
                ('La Paz', 'HN-LP'),
                ('Lempira', 'HN-LE'),
                ('Ocotepeque', 'HN-OC'),
                ('Olancho', 'HN-OL'),
                ('Santa B√°rbara', 'HN-SB'),
                ('Valle', 'HN-VA'),
                ('Yoro', 'HN-YO'),
            ],
            'Nicaragua': [  # Nicaragua
                ('Boaco', 'NI-BO'),
                ('Carazo', 'NI-CA'),
                ('Chinandega', 'NI-CI'),
                ('Chontales', 'NI-CO'),
                ('Estel√≠', 'NI-ES'),
                ('Granada', 'NI-GR'),
                ('Jinotega', 'NI-JI'),
                ('Le√≥n', 'NI-LE'),
                ('Madriz', 'NI-MD'),
                ('Managua', 'NI-MN'),
                ('Masaya', 'NI-MS'),
                ('Matagalpa', 'NI-MT'),
                ('Nueva Segovia', 'NI-NS'),
                ('R√≠o San Juan', 'NI-RS'),
                ('Rivas', 'NI-RI'),
                ('Atl√°ntico Norte', 'NI-AN'),
                ('Atl√°ntico Sur', 'NI-AS'),
            ],
            'Costa Rica': [  # Costa Rica
                ('San Jos√©', 'CR-SJ'),
                ('Alajuela', 'CR-A'),
                ('Cartago', 'CR-C'),
                ('Heredia', 'CR-H'),
                ('Guanacaste', 'CR-G'),
                ('Puntarenas', 'CR-P'),
                ('Lim√≥n', 'CR-L'),
            ],
            'Panam√°': [  # Panam√°
                ('Bocas del Toro', 'PA-1'),
                ('Cocl√©', 'PA-2'),
                ('Col√≥n', 'PA-3'),
                ('Chiriqu√≠', 'PA-4'),
                ('Dari√©n', 'PA-5'),
                ('Herrera', 'PA-6'),
                ('Los Santos', 'PA-7'),
                ('Panam√°', 'PA-8'),
                ('Veraguas', 'PA-9'),
                ('Guna Yala', 'PA-KY'),
                ('Ember√°-Wounaan', 'PA-EM'),
                ('Ng√§be-Bugl√©', 'PA-NB'),
            ],
            'Argentina': [  # Argentina
                ('Buenos Aires', 'AR-B'),
                ('Catamarca', 'AR-K'),
                ('Chaco', 'AR-H'),
                ('Chubut', 'AR-U'),
                ('C√≥rdoba', 'AR-X'),
                ('Corrientes', 'AR-W'),
                ('Entre R√≠os', 'AR-E'),
                ('Formosa', 'AR-P'),
                ('Jujuy', 'AR-Y'),
                ('La Pampa', 'AR-L'),
                ('La Rioja', 'AR-F'),
                ('Mendoza', 'AR-M'),
                ('Misiones', 'AR-N'),
                ('Neuqu√©n', 'AR-Q'),
                ('R√≠o Negro', 'AR-R'),
                ('Salta', 'AR-A'),
                ('San Juan', 'AR-J'),
                ('San Luis', 'AR-D'),
                ('Santa Cruz', 'AR-Z'),
                ('Santa Fe', 'AR-S'),
                ('Santiago del Estero', 'AR-G'),
                ('Tierra del Fuego', 'AR-V'),
                ('Tucum√°n', 'AR-T'),
            ],
            'Chile': [  # Chile
                ('Arica y Parinacota', 'CL-AP'),
                ('Tarapac√°', 'CL-TA'),
                ('Antofagasta', 'CL-AN'),
                ('Atacama', 'CL-AT'),
                ('Coquimbo', 'CL-CO'),
                ('Valpara√≠so', 'CL-VS'),
                ('Regi√≥n Metropolitana', 'CL-RM'),
                ('O\'Higgins', 'CL-LI'),
                ('Maule', 'CL-ML'),
                ('√ëuble', 'CL-NB'),
                ('Biob√≠o', 'CL-BI'),
                ('La Araucan√≠a', 'CL-AR'),
                ('Los R√≠os', 'CL-LR'),
                ('Los Lagos', 'CL-LL'),
                ('Ays√©n', 'CL-AI'),
                ('Magallanes', 'CL-MA'),
            ],
            'Colombia': [  # Colombia
                ('Amazonas', 'CO-AMA'),
                ('Antioquia', 'CO-ANT'),
                ('Arauca', 'CO-ARA'),
                ('Atl√°ntico', 'CO-ATL'),
                ('Bol√≠var', 'CO-BOL'),
                ('Boyac√°', 'CO-BOY'),
                ('Caldas', 'CO-CAL'),
                ('Caquet√°', 'CO-CAQ'),
                ('Casanare', 'CO-CAS'),
                ('Cauca', 'CO-CAU'),
                ('Cesar', 'CO-CES'),
                ('Choc√≥', 'CO-CHO'),
                ('C√≥rdoba', 'CO-COR'),
                ('Cundinamarca', 'CO-CUN'),
                ('Guain√≠a', 'CO-GUA'),
                ('Guaviare', 'CO-GUV'),
                ('Huila', 'CO-HUI'),
                ('La Guajira', 'CO-LAG'),
                ('Magdalena', 'CO-MAG'),
                ('Meta', 'CO-MET'),
                ('Nari√±o', 'CO-NAR'),
                ('Norte de Santander', 'CO-NSA'),
                ('Putumayo', 'CO-PUT'),
                ('Quind√≠o', 'CO-QUI'),
                ('Risaralda', 'CO-RIS'),
                ('San Andr√©s y Providencia', 'CO-SAP'),
                ('Santander', 'CO-SAN'),
                ('Sucre', 'CO-SUC'),
                ('Tolima', 'CO-TOL'),
                ('Valle del Cauca', 'CO-VAC'),
                ('Vaup√©s', 'CO-VAU'),
                ('Vichada', 'CO-VID'),
            ],
            'Ecuador': [  # Ecuador
                ('Azuay', 'EC-A'),
                ('Bol√≠var', 'EC-B'),
                ('Ca√±ar', 'EC-F'),
                ('Carchi', 'EC-C'),
                ('Chimborazo', 'EC-H'),
                ('Cotopaxi', 'EC-X'),
                ('El Oro', 'EC-O'),
                ('Esmeraldas', 'EC-E'),
                ('Gal√°pagos', 'EC-W'),
                ('Guayas', 'EC-G'),
                ('Imbabura', 'EC-I'),
                ('Loja', 'EC-L'),
                ('Los R√≠os', 'EC-R'),
                ('Manab√≠', 'EC-M'),
                ('Morona Santiago', 'EC-S'),
                ('Napo', 'EC-N'),
                ('Orellana', 'EC-D'),
                ('Pastaza', 'EC-Y'),
                ('Pichincha', 'EC-P'),
                ('Santa Elena', 'EC-SE'),
                ('Santo Domingo de los Ts√°chilas', 'EC-SD'),
                ('Sucumb√≠os', 'EC-U'),
                ('Tungurahua', 'EC-T'),
                ('Zamora Chinchipe', 'EC-Z'),
            ],
            'Per√∫': [  # Per√∫
                ('Amazonas', 'PE-AMA'),
                ('√Åncash', 'PE-ANC'),
                ('Apur√≠mac', 'PE-APU'),
                ('Arequipa', 'PE-ARE'),
                ('Ayacucho', 'PE-AYA'),
                ('Cajamarca', 'PE-CAJ'),
                ('Callao', 'PE-CAL'),
                ('Cusco', 'PE-CUS'),
                ('Huancavelica', 'PE-HUV'),
                ('Hu√°nuco', 'PE-HUC'),
                ('Ica', 'PE-ICA'),
                ('Jun√≠n', 'PE-JUN'),
                ('La Libertad', 'PE-LAL'),
                ('Lambayeque', 'PE-LAM'),
                ('Lima', 'PE-LIM'),
                ('Loreto', 'PE-LOR'),
                ('Madre de Dios', 'PE-MDD'),
                ('Moquegua', 'PE-MOQ'),
                ('Pasco', 'PE-PAS'),
                ('Piura', 'PE-PIU'),
                ('Puno', 'PE-PUN'),
                ('San Mart√≠n', 'PE-SAM'),
                ('Tacna', 'PE-TAC'),
                ('Tumbes', 'PE-TUM'),
                ('Ucayali', 'PE-UCA'),
            ],
            'Venezuela': [  # Venezuela
                ('Amazonas', 'VE-X'),
                ('Anzo√°tegui', 'VE-B'),
                ('Apure', 'VE-C'),
                ('Aragua', 'VE-D'),
                ('Barinas', 'VE-E'),
                ('Bol√≠var', 'VE-F'),
                ('Carabobo', 'VE-G'),
                ('Cojedes', 'VE-H'),
                ('Delta Amacuro', 'VE-Y'),
                ('Falc√≥n', 'VE-I'),
                ('Gu√°rico', 'VE-J'),
                ('Lara', 'VE-K'),
                ('M√©rida', 'VE-L'),
                ('Miranda', 'VE-M'),
                ('Monagas', 'VE-N'),
                ('Nueva Esparta', 'VE-O'),
                ('Portuguesa', 'VE-P'),
                ('Sucre', 'VE-R'),
                ('T√°chira', 'VE-S'),
                ('Trujillo', 'VE-T'),
                ('Vargas', 'VE-W'),
                ('Yaracuy', 'VE-U'),
                ('Zulia', 'VE-V'),
                ('Distrito Capital', 'VE-A'),
            ],
        }
        
        print("üèõÔ∏è  Inserting states for Hispanic American countries...")
        for country_name, states in states_data.items():
            if country_name in country_map:
                country_id = country_map[country_name]
                for state_name, state_code in states:
                    cursor.execute(
                        "INSERT INTO states (name, country_id, active) VALUES (%s, %s, %s)",
                        (state_name, country_id, True)
                    )
        
        # Add "Otro" state for all non-Hispanic American countries
        print("üìù Adding 'Otro' state for non-Hispanic countries...")
        hispanic_countries = set(states_data.keys()) | {'M√©xico', 'Estados Unidos'}
        
        for country_name, country_id in country_map.items():
            if country_name not in hispanic_countries:
                cursor.execute(
                    "INSERT INTO states (name, country_id, active) VALUES (%s, %s, %s)",
                    ('Otro', country_id, True)
                )
        
        # Commit changes
        conn.commit()
        
        print("‚úÖ Data insertion completed successfully!")
        
        # Verify results
        cursor.execute("SELECT COUNT(*) FROM countries WHERE active = true")
        countries_count = cursor.fetchone()[0]
        print(f"üìä Countries: {countries_count}")
        
        cursor.execute("SELECT COUNT(*) FROM states WHERE active = true")
        states_count = cursor.fetchone()[0]
        print(f"üìä States: {states_count}")
        
        # Show some examples
        cursor.execute("""
            SELECT c.name, COUNT(s.id) as state_count 
            FROM countries c 
            LEFT JOIN states s ON c.id = s.country_id AND s.active = true
            WHERE c.active = true 
            GROUP BY c.id, c.name 
            ORDER BY c.name 
            LIMIT 10
        """)
        
        print("\nüìã Sample countries and their states:")
        for row in cursor.fetchall():
            print(f"  {row[0]}: {row[1]} states")
        
    except Exception as e:
        print(f"‚ùå Insertion failed: {str(e)}")
        if conn:
            conn.rollback()
        raise
    finally:
        if cursor:
            cursor.close()
        if conn:
            conn.close()
        print("üîå Database connection closed")

if __name__ == "__main__":
    run_insertion()
