#!/bin/bash
# ============================================================================
# SCRIPT DE EJECUCI√ìN DE SETUP INICIAL
# Sistema de Historias Cl√≠nicas Electr√≥nicas
# ============================================================================

echo "============================================="
echo "  SETUP INICIAL - BASE DE DATOS"
echo "  Sistema de Historias Cl√≠nicas"
echo "============================================="
echo ""

# Colores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Verificar que Docker est√° corriendo
if ! docker ps > /dev/null 2>&1; then
    echo "‚ùå Error: Docker no est√° corriendo"
    echo "Por favor inicia Docker Desktop primero"
    exit 1
fi

# Verificar que el contenedor de PostgreSQL existe
if ! docker ps -a | grep -q "postgres-db"; then
    echo "‚ùå Error: Contenedor de PostgreSQL no encontrado"
    echo "Por favor ejecuta: docker-compose up -d"
    exit 1
fi

echo -e "${BLUE}üìã Este script poblar√° la base de datos con:${NC}"
echo "   ‚Ä¢ 28 pa√≠ses de Am√©rica Latina"
echo "   ‚Ä¢ 527 estados/provincias"
echo "   ‚Ä¢ 174 especialidades m√©dicas"
echo "   ‚Ä¢ 29 relaciones de emergencia"
echo "   ‚Ä¢ 403 medicamentos"
echo "   ‚Ä¢ 202 diagn√≥sticos CIE-10"
echo ""

read -p "¬øDeseas continuar? (s/n): " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Ss]$ ]]
then
    echo "Operaci√≥n cancelada"
    exit 0
fi

echo ""
echo -e "${YELLOW}‚è≥ Iniciando carga de datos...${NC}"
echo ""

# Ejecutar parte 1: Pa√≠ses, estados, especialidades, relaciones
echo -e "${BLUE}1/2${NC} Cargando pa√≠ses, estados, especialidades y relaciones..."
docker exec -i medical-records-main-postgres-db-1 psql -U historias_user -d historias_clinicas < backend/initial_data_setup.sql

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úì Parte 1 completada${NC}"
else
    echo "‚ùå Error en parte 1"
    exit 1
fi

echo ""

# Ejecutar parte 2: Medicamentos
echo -e "${BLUE}2/2${NC} Cargando medicamentos..."
docker exec -i medical-records-main-postgres-db-1 psql -U historias_user -d historias_clinicas < backend/initial_data_setup_part2.sql

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úì Parte 2 completada${NC}"
else
    echo "‚ùå Error en parte 2"
    exit 1
fi

echo ""
echo -e "${GREEN}=============================================${NC}"
echo -e "${GREEN}  ‚úÖ SETUP INICIAL COMPLETADO${NC}"
echo -e "${GREEN}=============================================${NC}"
echo ""

# Mostrar resumen
echo "üìä Resumen de datos cargados:"
echo ""

docker exec medical-records-main-postgres-db-1 psql -U historias_user -d historias_clinicas << 'EOF'
\echo 'üåé Geograf√≠a:'
SELECT '   Pa√≠ses: ' || COUNT(*) FROM countries;
SELECT '   Estados: ' || COUNT(*) FROM states;
\echo ''
\echo 'üè• Cat√°logos m√©dicos:'
SELECT '   Especialidades: ' || COUNT(*) FROM specialties;
SELECT '   Relaciones emergencia: ' || COUNT(*) FROM emergency_relationships;
\echo ''
\echo 'üíä Medicamentos:'
SELECT '   Total medicamentos: ' || COUNT(*) FROM medications;
\echo ''
\echo 'üî¨ Diagn√≥sticos:'
SELECT '   Categor√≠as CIE-10: ' || COUNT(*) FROM diagnosis_categories;
SELECT '   Diagn√≥sticos: ' || COUNT(*) FROM diagnosis_catalog;
\echo ''
EOF

echo ""
echo -e "${BLUE}üí° Recomendaciones:${NC}"
echo "   1. Reinicia el backend: docker-compose restart python-backend"
echo "   2. Verifica que el sistema funcione correctamente"
echo "   3. Haz un backup de la base de datos"
echo ""
echo -e "${GREEN}üöÄ El sistema est√° listo para usar${NC}"
echo ""

