╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║              🪟 SCRIPTS PARA WINDOWS - SISTEMA CORTEX                        ║
║                    Sistema de Historias Clínicas                             ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝


┌──────────────────────────────────────────────────────────────────────────────┐
│  📦 SCRIPTS CREADOS                                                          │
└──────────────────────────────────────────────────────────────────────────────┘

  ✅ install.bat               - Instalación inicial completa
  ✅ start.bat                 - Iniciar el sistema
  ✅ stop.bat                  - Detener el sistema
  ✅ restart-dev.bat           - Reiniciar servicios (desarrollo)
  ✅ status.bat                - Verificar estado del sistema
  ✅ logs.bat                  - Ver logs de servicios
  ✅ rebuild.bat               - Reconstruir proyecto
  ✅ deploy-constancias.bat    - Desplegar constancias médicas
  ✅ clean.bat                 - Limpiar proyecto completamente

  📚 Documentación
  ✅ README_WINDOWS.md         - Guía completa para Windows
  ✅ SCRIPTS_WINDOWS.md        - Referencia de todos los scripts


┌──────────────────────────────────────────────────────────────────────────────┐
│  🚀 INICIO RÁPIDO                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

  Primera Instalación
  ───────────────────
  
    1. Instalar Docker Desktop: https://www.docker.com/products/docker-desktop/
    2. Instalar Git: https://git-scm.com/download/win
    3. Clonar repositorio: git clone <URL>
    4. Ejecutar: install.bat
    5. Esperar 5-15 minutos
    6. Abrir: http://localhost:3000


  Uso Diario
  ──────────
  
    Inicio:   start.bat
    Detener:  stop.bat
    Estado:   status.bat
    Logs:     logs.bat


┌──────────────────────────────────────────────────────────────────────────────┐
│  📋 GUÍA DE USO POR ESCENARIO                                                │
└──────────────────────────────────────────────────────────────────────────────┘

  Escenario 1: Primera Instalación
  ─────────────────────────────────
  
    install.bat
    
    → Construye todo y verifica conectividad
    → Tiempo: 10-15 minutos


  Escenario 2: Inicio Normal del Día
  ───────────────────────────────────
  
    start.bat
    
    → Inicia contenedores
    → Tiempo: 30-60 segundos


  Escenario 3: Cambios en Frontend
  ─────────────────────────────────
  
    restart-dev.bat frontend
    logs.bat frontend
    
    → Reinicia solo el frontend
    → Tiempo: 10-20 segundos


  Escenario 4: Cambios en Backend
  ────────────────────────────────
  
    restart-dev.bat backend
    logs.bat backend
    
    → Reinicia solo el backend
    → Tiempo: 10-20 segundos


  Escenario 5: Actualizar Dependencias
  ─────────────────────────────────────
  
    rebuild.bat frontend     (si cambió package.json)
    rebuild.bat backend      (si cambió requirements.txt)
    rebuild.bat              (si cambiaron ambos)
    
    → Reconstruye imágenes
    → Tiempo: 3-10 minutos


  Escenario 6: Ver Qué Está Pasando
  ──────────────────────────────────
  
    status.bat               (estado general)
    logs.bat                 (todos los logs)
    logs.bat frontend        (solo frontend)
    logs.bat backend         (solo backend)


  Escenario 7: Problemas / No Funciona
  ─────────────────────────────────────
  
    Nivel 1: status.bat && logs.bat
    Nivel 2: restart-dev.bat
    Nivel 3: rebuild.bat
    Nivel 4: clean.bat && install.bat
    
    → Escalamiento de soluciones


  Escenario 8: Desplegar Constancias
  ───────────────────────────────────
  
    deploy-constancias.bat
    
    → Despliega nueva funcionalidad
    → Tiempo: 3-5 minutos


  Escenario 9: Fin del Día / Liberar Recursos
  ────────────────────────────────────────────
  
    stop.bat
    
    → Detiene servicios
    → Tiempo: 5-10 segundos


┌──────────────────────────────────────────────────────────────────────────────┐
│  🎯 COMANDOS MÁS COMUNES                                                     │
└──────────────────────────────────────────────────────────────────────────────┘

  # Primera vez
  install.bat

  # Día a día
  start.bat
  stop.bat

  # Desarrollo
  restart-dev.bat frontend
  restart-dev.bat backend
  logs.bat frontend
  logs.bat backend

  # Diagnóstico
  status.bat
  logs.bat

  # Mantenimiento
  rebuild.bat
  clean.bat


┌──────────────────────────────────────────────────────────────────────────────┐
│  📊 COMPARACIÓN DE SCRIPTS                                                   │
└──────────────────────────────────────────────────────────────────────────────┘

  ┌─────────────────────┬─────────────┬────────────────────────────────────┐
  │ Script              │ Cuándo Usar │ Tiempo Estimado                    │
  ├─────────────────────┼─────────────┼────────────────────────────────────┤
  │ install.bat         │ Primera vez │ 10-15 min                          │
  │ start.bat           │ Diario      │ 30-60 seg                          │
  │ stop.bat            │ Diario      │ 5-10 seg                           │
  │ restart-dev.bat     │ Desarrollo  │ 10-30 seg                          │
  │ status.bat          │ Verificar   │ 5 seg                              │
  │ logs.bat            │ Debugging   │ Instantáneo                        │
  │ rebuild.bat         │ Updates     │ 3-10 min                           │
  │ deploy-constancias  │ Feature     │ 3-5 min                            │
  │ clean.bat           │ Problemas   │ 1-2 min (+ install después)        │
  └─────────────────────┴─────────────┴────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│  🔍 DETALLE DE CADA SCRIPT                                                   │
└──────────────────────────────────────────────────────────────────────────────┘

  install.bat
  ───────────
  
    Propósito:  Instalación inicial completa
    Parámetros: Ninguno
    Destructivo: No
    
    Hace:
      ✓ Verifica Docker y Git
      ✓ Limpia instalaciones previas
      ✓ Construye imágenes Docker
      ✓ Inicia servicios
      ✓ Verifica conectividad
      
    Usa cuando:
      - Primera instalación
      - Después de clean.bat
      - Máquina nueva


  start.bat
  ─────────
  
    Propósito:  Iniciar el sistema
    Parámetros: Ninguno
    Destructivo: No
    
    Hace:
      ✓ Verifica Docker
      ✓ Inicia contenedores
      ✓ Muestra URLs
      
    Usa cuando:
      - Inicio del día
      - Después de stop.bat
      - Después de reiniciar PC


  stop.bat
  ────────
  
    Propósito:  Detener el sistema
    Parámetros: Ninguno
    Destructivo: No (no borra datos)
    
    Hace:
      ✓ Detiene contenedores
      ✓ Libera puertos
      
    Usa cuando:
      - Fin del día
      - Liberar recursos
      - Antes de reiniciar


  restart-dev.bat [servicio]
  ──────────────────────────
  
    Propósito:  Reiniciar servicios
    Parámetros: frontend | backend | db | (nada=todo)
    Destructivo: No
    
    Hace:
      ✓ Reinicia servicio(s)
      ✓ Mantiene datos
      
    Usa cuando:
      - Cambios en código
      - Servicio no responde
      - Desarrollo activo


  status.bat
  ──────────
  
    Propósito:  Verificar estado
    Parámetros: Ninguno
    Destructivo: No
    
    Muestra:
      ✓ Estado de Docker
      ✓ Contenedores activos
      ✓ Conectividad
      ✓ Recursos (CPU/RAM)
      
    Usa cuando:
      - Verificar salud
      - Antes de reportar problemas
      - Monitorear recursos


  logs.bat [servicio]
  ───────────────────
  
    Propósito:  Ver logs
    Parámetros: frontend | backend | db | (nada=todo)
    Destructivo: No
    
    Muestra:
      ✓ Logs en tiempo real
      ✓ Errores y advertencias
      ✓ Actividad del sistema
      
    Usa cuando:
      - Debugging
      - Ver errores
      - Monitorear actividad
      
    Salir: Ctrl+C


  rebuild.bat [servicio]
  ──────────────────────
  
    Propósito:  Reconstruir proyecto
    Parámetros: frontend | backend | (nada=todo)
    Destructivo: Parcial (reconstruye imágenes)
    
    Hace:
      ✓ Detiene servicios
      ✓ Reconstruye imágenes
      ✓ Inicia servicios
      
    Usa cuando:
      - Cambios en dependencias
      - Cambios en Dockerfiles
      - Después de git pull
      
    ⚠️ Detiene servicios temporalmente


  deploy-constancias.bat
  ──────────────────────
  
    Propósito:  Desplegar constancias médicas
    Parámetros: Ninguno
    Destructivo: Parcial (reconstruye frontend)
    
    Hace:
      ✓ Verifica Docker
      ✓ Muestra archivos modificados
      ✓ Pide confirmación
      ✓ Reconstruye frontend
      ✓ Inicia servicios
      
    Usa cuando:
      - Desplegar constancias
      - Actualizar PDFs
      - Primera vez con constancias


  clean.bat
  ─────────
  
    Propósito:  Limpiar completamente
    Parámetros: Ninguno
    Destructivo: SÍ ⚠️⚠️⚠️
    
    Elimina:
      ⚠️ Contenedores
      ⚠️ Imágenes
      ⚠️ Volúmenes
      ⚠️ BASE DE DATOS
      ⚠️ Cache
      
    Usa cuando:
      - Problemas graves
      - Empezar desde cero
      - Liberar mucho espacio
      
    ⚠️ Después ejecuta install.bat


┌──────────────────────────────────────────────────────────────────────────────┐
│  🌐 URLS Y ACCESO                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

  Una vez iniciado el sistema:
  
  Frontend:      http://localhost:3000
  Backend API:   http://localhost:8000
  API Docs:      http://localhost:8000/docs
  Base de Datos: localhost:5432
  
  Credenciales por defecto:
  
  Email:         thiago@avant.com
  Password:      Password123!


┌──────────────────────────────────────────────────────────────────────────────┐
│  ⚠️ SOLUCIÓN DE PROBLEMAS                                                    │
└──────────────────────────────────────────────────────────────────────────────┘

  Problema: Docker no inicia
  Solución:
    1. Verificar WSL 2: wsl --install
    2. Reiniciar Windows
    3. Abrir Docker Desktop


  Problema: Scripts no se ejecutan
  Solución:
    1. Ejecutar CMD como Administrador
    2. Navegar a la carpeta del proyecto
    3. Ejecutar el script


  Problema: Puerto ocupado (3000, 8000, 5432)
  Solución:
    1. netstat -ano | findstr :3000
    2. taskkill /PID <PID> /F


  Problema: Frontend/Backend no responde
  Solución:
    1. status.bat
    2. logs.bat frontend
    3. restart-dev.bat
    4. rebuild.bat (si persiste)


  Problema: Base de datos corrupta
  Solución:
    1. clean.bat
    2. install.bat


┌──────────────────────────────────────────────────────────────────────────────┐
│  📚 DOCUMENTACIÓN ADICIONAL                                                  │
└──────────────────────────────────────────────────────────────────────────────┘

  README_WINDOWS.md        - Guía completa para Windows
  SCRIPTS_WINDOWS.md       - Referencia detallada de scripts
  SETUP_GUIDE.md           - Guía de instalación general
  DOCUMENTATION_INDEX.md   - Índice de toda la documentación


┌──────────────────────────────────────────────────────────────────────────────┐
│  ✅ CHECKLIST DE INSTALACIÓN                                                 │
└──────────────────────────────────────────────────────────────────────────────┘

  Antes de empezar:
  ─────────────────
  □ Windows 10/11 instalado
  □ Docker Desktop descargado
  □ Git descargado
  □ Al menos 8GB RAM disponible
  □ Al menos 10GB espacio en disco
  
  Instalación:
  ────────────
  □ Docker Desktop instalado y ejecutándose
  □ Git instalado
  □ WSL 2 habilitado
  □ Repositorio clonado
  □ install.bat ejecutado exitosamente
  □ Frontend accesible (http://localhost:3000)
  □ Backend accesible (http://localhost:8000)
  □ Login funciona
  
  Verificación:
  ─────────────
  □ status.bat muestra todos los servicios activos
  □ logs.bat no muestra errores críticos
  □ Puedes crear un paciente de prueba
  □ Puedes crear una consulta de prueba
  □ PDFs se generan correctamente


┌──────────────────────────────────────────────────────────────────────────────┐
│  💡 CONSEJOS Y MEJORES PRÁCTICAS                                             │
└──────────────────────────────────────────────────────────────────────────────┘

  ✅ DO (Hacer):
  ──────────────
  • Usar start.bat para inicio diario
  • Ejecutar status.bat si algo no funciona
  • Revisar logs.bat antes de reportar errores
  • Usar restart-dev.bat [servicio] específico
  • Mantener Docker Desktop ejecutándose
  • Hacer git pull antes de trabajar
  
  ❌ DON'T (No hacer):
  ────────────────────
  • No uses rebuild.bat para inicio diario
  • No uses clean.bat sin respaldo
  • No cierres Docker Desktop mientras trabajas
  • No ejecutes múltiples scripts simultáneamente
  • No ignores los errores en logs
  • No uses install.bat cada día


┌──────────────────────────────────────────────────────────────────────────────┐
│  🎯 FLUJO DE TRABAJO RECOMENDADO                                             │
└──────────────────────────────────────────────────────────────────────────────┘

  Lunes (o después de actualizar):
  ─────────────────────────────────
  
    git pull
    rebuild.bat
    status.bat
  
  
  Martes-Viernes (día normal):
  ─────────────────────────────
  
    start.bat
    
    [trabajar...]
    
    restart-dev.bat frontend  (si cambias código)
    logs.bat frontend         (para verificar)
    
    [trabajar más...]
    
    stop.bat
  
  
  Al encontrar problemas:
  ───────────────────────
  
    status.bat
    logs.bat
    
    [si no se resuelve]
    
    restart-dev.bat
    
    [si persiste]
    
    rebuild.bat
    
    [última opción]
    
    clean.bat
    install.bat


╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║                    ✨ SCRIPTS LISTOS PARA USAR ✨                            ║
║                                                                              ║
║                         9 Scripts Creados                                    ║
║                         2 Guías Completas                                    ║
║                                                                              ║
║                  Estado: ✅ LISTO PARA WINDOWS                               ║
║                                                                              ║
║                  Fecha: Octubre 21, 2025                                     ║
║                  Sistema: CORTEX Medical Records                             ║
║                  Plataforma: Windows 10/11                                   ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝

